#include <math.h>
#include "co2h2_dipole_lr.hpp"

double dipx(double R, double Theta1, double Theta2, double Phi)
{
	double t1, t2, t3, t4, t5, t6, t7, t10, t11, t12, t13, t16, t17, t18, 
		t19, t22, t23, t28, t29, t32, t35, t40, t41, t42, t45, t49, t50, t55, t60, t61, t75, t84, t113, t117, t120, t134, t147, t150, t155;

	t1 = sin(Theta2);
	t2 = cos(Phi);
	/*t1=sqrt(1-Theta2*Theta2);
	t2=Phi;*/

	t3 = t2 * t2;
	t4 = t3 * t2;
	t5 = t1 * t4;

	t6 = cos(Theta2);
	//t6 = Theta2;

	t7 = t6 * R;
	t10 = t1 * t2;
	t11 = t6 * t6;
	t12 = t11 * t6;
	t13 = t12 * R;

	t16 = cos(Theta1);
	t17 = sin(Theta1);
	/*t16 = Theta1;
	t17 = sqrt(1-Theta1*Theta1);*/

	t18 = t16 * t17;
	t19 = t11 * t3;
	t22 = t16 * t16;
	t23 = t22 * t22;
	t28 = t22 * t16 * t17;
	t29 = R * t3;
	t32 = R * t11;
	t35 = t6 * t22;
	t40 = R * R;
	t41 = t40 * R;
	t42 = t41 * t11;
	t45 = t3 * t3;
	t49 = t11 * t11;
	t50 = R * t49;
	t55 = 0.52578799875010e15 * t5 * t7 - 0.4322620444e16 * t10 * t13 - 0.1342099810e17 * t18 * t19 + 0.15499135610716e17 * t10 * t6 * t23 - 0.6682849622e16 * t28 * t29 + 0.20386382408438e17 * t28 * t32 - 0.3749580783e17 * t10 * t35 + 0.44283244602045e16 * t28 * t19 + 0.75304633950000e15 * t18 * t42 + 0.16e2 * t18 * R * t45 + 0.24113330718750e16 * t18 * t50 + 0.15558082573126e17 * t18 * t29;
	t60 = t6 * t2;
	t61 = t1 * t41;
	t75 = t12 * t22;
	t84 = -0.3734129790e17 * t18 * t32 + 0.20982692154375e17 * t10 * t7 - 0.1201248982e16 * t60 * t61 - 0.4718920590e15 * t18 * t41 * t3 + 0.57672847024238e16 * t18 * t49 * t3 + 0.325e3 * t18 * t11 * t45 - 0.5257879988e15 * t5 * t13 + 0.16477956292640e16 * t5 * t75 + 0.16463314015854e16 * t5 * t35 + 0.49433868877920e16 * t10 * t75 + 0.43288113815628e17 * t18 + 0.21061043429522e17 * t28;
	t113 = -0.9117287027e16 * t18 * t11 + 0.15586236372638e16 * t60 * t1 - 0.1040408782e17 * t28 * R - 0.4428324460e16 * t28 * t3 + 0.13284973380613e17 * t28 * t11 + 0.93007769164212e16 * t18 * t3 + 0.94553150690622e16 * t18 * R - 0.1373171156e16 * t18 * t41 + 0.30411581639152e16 * t12 * t2 * t1 - 0.150e3 * t18 * t45 - 0.1647795629e16 * t12 * t4 * t1 - 0.1646331402e16 * t6 * t4 * t1;
	t117 = t13 * t22;
	t120 = t7 * t22;
	t134 = t32 * t3;
	t147 = 0.47189205900000e15 * t18 * t42 * t3 + 0.52578799875012e15 * t5 * t117 - 0.5257879988e15 * t5 * t120 + 0.42951124518750e16 * t10 * t117 + 0.26e2 * t18 * t50 * t45 - 0.65e2 * t18 * t32 * t45 + 0.26289399937502e16 * t18 * t50 * t3 - 0.1818702257e17 * t18 * t134 + 0.12098689815000e16 * t60 * t61 * t22 + 0.25342214034375e17 * t10 * t7 * t23 - 0.6515749360e17 * t10 * t120 + 0.66828496218752e16 * t28 * t134;
	t150 = t40 * t40;
	t155 = -0.4000000000e-13 * (t55 + t84 + t113 + t147) / t150 / t41;

	return t155;

}



double dipy(double R, double Theta1, double Theta2, double Phi)
{
	double t1, t2, t3, t4, t5, t6, t7, t11, t12, t13, t14, t17, t21, t22, t23, t30, t38, t39, t43, t48, t51, t52, t55, t61, t86, t91, t96, t99, t104;
	t1 = sin(Phi);
	t2 = cos(Theta1);
	t3 = sin(Theta1);
	/*t1 = sqrt(1-Phi*Phi);
	t2 = Theta1;
	t3 = sqrt(1-Theta1*Theta1);*/

	t4 = t2 * t3;

	t5 = cos(Phi);
	t6 = cos(Theta2);
	/*t5 = Phi;
	t6 = Theta2;*/

	t7 = t6 * t6;

	t11 = sin(Theta2);
	//t11 = sqrt(1-Theta2*Theta2);

	t12 = t6 * t11;
	t13 = t2 * t2;
	t14 = R * t13;
	t17 = t5 * R;
	t21 = t7 * t6 * t11;
	t22 = t5 * t5;
	t23 = t22 * t13;
	t30 = t7 * t7;
	t38 = R * R;
	t39 = t38 * R;
	t43 = t13 * t13;
	t48 = t13 * t2 * t3;
	t51 = t5 * t2;
	t52 = t3 * t39;
	t55 = R * t22;
	t61 = -0.3190096815e15 * t4 * t5 * t7 - 0.1102777537e16 * t12 * t14 + 0.44111101484998e15 * t4 * t17 + 0.65911825170546e14 * t21 * t23 + 0.65853256063410e14 * t12 * t23 + 0.94641839774998e14 * t21 * t14 + 0.23069138809696e15 * t4 * t5 * t30 + 0.4e1 * t4 * t22 * t5 * t7 + 0.28313523540000e14 * t12 * t39 * t13 + 0.10762712100000e15 * t12 * R * t43 - 0.8610169680e14 * t48 * t17 - 0.1887568236e14 * t51 * t52 + 0.21031519949988e14 * t12 * t55 - 0.2103151995e14 * t21 * t55 - 0.2543066023e15 * t12;
	t86 = t14 * t22;
	t91 = t17 * t7;
	t96 = 0.12164632655661e15 * t21 + 0.19773547551169e15 * t21 * t13 - 0.6591182517e14 * t21 * t22 - 0.6585325606e14 * t12 * t22 - 0.2796872355e14 * t12 * t39 - 0.5428667089e15 * t13 * t6 * t11 - 0.9574215945e14 * t21 * R + 0.24184691969999e15 * t12 * R + 0.15420083406530e15 * t4 * t5 + 0.18875682360000e14 * t51 * t52 * t7 + 0.10515759975001e15 * t4 * t17 * t30 + 0.21031519950005e14 * t21 * t86 - 0.2103151995e14 * t12 * t86 + 0.86101696800000e14 * t48 * t91 - 0.5462686146e15 * t4 * t91;
	t99 = t38 * t38;
	t104 = -0.1000000000e-11 * t1 * (t61 + t96) / t99 / t39;

	
	return t104;
}

double dipz(double R, double Theta1, double Theta2, double Phi)
{
	double t1, t2, t3, t4, t5, t6, t7, t8, t9, t12, t16, t17, t18, t27, t28, t30, t31, t32,
		t35, t36, t39, t40, t44, t48, t51, t54, t56, t59, t61, t66, t68, t74, t99, t117, t123, t126, t131;
	
	t1 = cos(Theta1);
	//t1 = Theta1;


	t2 = t1 * t1;
	t3 = R * t2;


	t4 = cos(Theta2);
	//t4 = Theta2; 

	t5 = t4 * t4;
	t6 = t5 * t5;

	t7 = cos(Phi);
	//t7 = Phi;

	t8 = t7 * t7;
	t9 = t6 * t8;
	t12 = t8 * t8;
	t16 = t2 * t2;
	t17 = R * t16;
	t18 = t5 * t8;

	t27 = sin(Theta1);
	//t27 = sqrt(1-Theta1*Theta1);

	t28 = t2 * t1 * t27;

	t30 = sin(Theta2);
	//t30 = sqrt(1-Theta2*Theta2);

	t31 = t7 * t30;
	t32 = t31 * R;
	t35 = t1 * t27;
	t36 = t35 * t4;
	t39 = R * R;
	t40 = t39 * R;
	t44 = t5 * t4;
	t48 = t2 * t6;
	t51 = -0.4916135838e17 + 0.10515759975002e16 * t3 * t9 - 0.2e1 * t3 * t5 * t12 + 0.90606144037500e16 * t17 * t18 + 0.9e1 * t3 * t6 * t12 - 0.5327212088e15 * t3 * t18 - 0.4960815686e17 * t28 * t4 * t32 - 0.6302504124e17 * t36 * t32 - 0.1947845904e16 * t36 * t31 * t40 - 0.9116012902e16 * t35 * t44 * t32 + 0.98867737755880e16 * t48 - 0.3295591259e16 * t9;
	t54 = R * t6;
	t56 = R * t8;
	t59 = t16 * t5;
	t61 = R * t12;
	t66 = t40 * t2;
	t68 = t2 * t5;
	t74 = -0.2677620015e17 * R * t5 + 0.32234979721872e16 * t54 + 0.95794691925000e16 * t56 + 0.36872603419062e16 * t18 + 0.26569946761222e17 * t59 + 0.11e2 * t61 - 0.8856648920e16 * t16 * t8 - 0.2997370030e17 * t3 + 0.28644362340000e16 * t66 + 0.38680580490026e17 * t68 + 0.92483180037870e16 * t2 * t8 + 0.91792411875000e15 * t40 * t5;
	t99 = 0.22261067456255e16 * t17 - 0.8527893195e16 * t56 * t5 + 0.88566489204060e16 * t59 * t8 + 0.47398707395626e17 * t3 * t5 - 0.9e1 * t54 * t12 + 0.2e1 * t61 * t5 + 0.46154120866874e17 * t17 * t5 - 0.9060614404e16 * t17 * t8 - 0.11e2 * t3 * t12 - 0.1254390926e17 * t68 * t8 + 0.29217688560000e16 * t66 * t5 - 0.5188547887e15 * t3 * t8;
	t117 = t4 * t7 * t30;
	t123 = -0.1051575998e16 * t54 * t8 + 0.95547581325000e16 * t3 * t6 + 0.32955912585230e16 * t48 * t8 + 0.62680626121875e16 * R + 0.11244368737572e18 * t2 + 0.60823163278295e16 * t6 - 0.3916690834e15 * t8 - 0.1634390263e17 * t5 + 0.42122086859045e17 * t16 - 0.1153456940e17 * t35 * t44 * t7 * t30 - 0.2768187066e17 * t35 * t117 - 0.3099827122e17 * t28 * t117 - 0.1585427768e16 * t40;
	t126 = t39 * t39;
	t131 = -0.2000000000e-13 * (t51 + t74 + t99 + t123) / t126 / t40;
	return t131;
}

